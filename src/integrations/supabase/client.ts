// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

// Get Supabase URL and anonymous key from environment variables
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Debug environment variables
console.log('üîç Supabase Environment Variables:');
console.log('VITE_SUPABASE_URL:', supabaseUrl);
console.log('VITE_SUPABASE_ANON_KEY:', supabaseAnonKey ? `${supabaseAnonKey.substring(0, 20)}...` : 'undefined');

// Fallback values in case environment variables are not loaded
const finalUrl = supabaseUrl || 'https://rezbwjeatqupurpkodlu.supabase.co';
const finalKey = supabaseAnonKey || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJlemJ3amVhdHF1cHVycGtvZGx1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg0MjU5MTMsImV4cCI6MjA2NDAwMTkxM30.HWi2ATucNgdShOmeDNgizKWAtReNdGgdnHCQjOKAB2Q';

console.log('‚úÖ Using Supabase URL:', finalUrl);
console.log('‚úÖ Using Supabase Key:', finalKey ? `${finalKey.substring(0, 20)}...` : 'undefined');

// Validate URL format before creating client
try {
  new URL(finalUrl);
  console.log('‚úÖ URL is valid');
} catch (error) {
  console.error('‚ùå Invalid URL:', finalUrl, error);
  throw new Error(`Invalid Supabase URL: ${finalUrl}`);
}

// Initialize and export the Supabase client
export const supabase = createClient(finalUrl, finalKey);